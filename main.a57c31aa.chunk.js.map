{"version":3,"sources":["components/definitions/Definitions.js","data/category.js","components/header/header.js","App.js","index.js"],"names":["Definitions","word","category","meanings","LightMode","className","src","phonetics","audio","style","backgroundColor","borderRadius","controls","map","mean","item","definitions","def","color","definition","width","example","synonyms","s","categories","value","label","Header","setCategory","setWord","darkTheme","createMuiTheme","palette","primary","main","type","ThemeProvider","theme","TextField","e","target","select","onChange","language","option","MenuItem","App","useState","setMeanings","LigthMode","setLightMode","DarkMode","withStyles","switchBase","grey","checked","track","Switch","dictionaryApi","a","axios","get","data","console","log","useEffect","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a57c31aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Definitions.css'\r\n\r\n\r\nconst Definitions = ({word, category, meanings, LightMode}) => {\r\n\r\n    return (\r\n        <div className = 'meanings'>\r\n\r\n            {\r\n                meanings[0] && word && category === \r\n        \"en\" && (\r\n            <audio src = {meanings[0].phonetics[0] && meanings[0].phonetics[0].audio} style = {{backgroundColor: \"white\", borderRadius : 10 }}\r\n            controls> \r\n                your device does not support audio\r\n            </audio>\r\n        )\r\n            }\r\n            {word === \"\"? ( <span className = \"intro\"> type a word in the search box to get the word meanings </span> ) : (\r\n                meanings.map((mean) => \r\n                    mean.meanings.map((item) => \r\n                      item.definitions.map((def) => (\r\n                          <div className = \"singleMean\" style = {{backgroundColor : LightMode? \"#3b5360\" : \"white\", color : LightMode? \"white\" : \"black\"}}> \r\n\r\n                          <b> {def.definition} </b>\r\n                          <hr style = {{backgroundColor : \"black\" , color : \"white\" , width : \"100%\"}}/>\r\n\r\n                          {\r\n                              def.example && (\r\n\r\n                                  <span>\r\n                                      <b> Example </b> {def.example} </span>\r\n\r\n                              )\r\n                          }\r\n                            <br/>\r\n                          \r\n                          {\r\n                              def.synonyms && (\r\n\r\n                                  <span>\r\n                                      <b> Synonyms </b> {def.synonyms.map((s) => `${s}, `)} </span>\r\n\r\n                              )\r\n                          }\r\n\r\n\r\n                          </div>\r\n                      )) \r\n                    \r\n                    ))\r\n                \r\n            )}\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Definitions","const categories = [\r\n\r\n    {\r\n        value:\"English\", label : \"en\"\r\n    },\r\n    {\r\n        value:\"French\", label : \"fr\"\r\n    },\r\n    {\r\n        value:\"Spanish\", label : \"es\"\r\n    },\r\n    {\r\n        value:\"Arabic\", label : \"ar\"\r\n    },\r\n]\r\n\r\nexport default categories;","import { createMuiTheme, MenuItem, TextField, ThemeProvider } from '@material-ui/core'\r\nimport React from 'react'\r\nimport \"./header.css\"\r\nimport categories from \"../../data/category\"\r\n\r\nconst Header = ({category, setCategory, word,  setWord, LightMode}) => {\r\n\r\n    const darkTheme = createMuiTheme({\r\n  palette: {\r\n      primary:{\r\n          main: LightMode? \"#000\" : \"#fff\",\r\n      },\r\n    type: LightMode? \"light\" : 'dark',\r\n  },\r\n});\r\n\r\nconst handleChange = (language) => {\r\n\r\n    setCategory (language)\r\n    setWord (\"\")\r\n\r\n}\r\n    return(\r\n        <div className = \"header\">\r\n            <span className = \"title\"> {word? word : \"Multi Language Dictionary\"} </span>\r\n            <div className = \"inputs\">\r\n                <ThemeProvider theme={darkTheme}>\r\n                <TextField className = \"search\" label=\"word to explore\" label=\"standard\" \r\n           value = {word}\r\n          onChange = {(e) => setWord(e.target.value)} />\r\n\r\n\r\n                <TextField\r\n                select\r\n                className = \"select\"\r\n                label = \"language\"\r\n          value = {category}\r\n          onChange = {(e) => handleChange (e.target.value)}\r\n          \r\n          \r\n        >\r\n         \r\n            {\r\n                categories.map((option) => (\r\n                    <MenuItem key={option.label}  value = {option.label}>\r\n              {option.value}\r\n            </MenuItem>\r\n                )\r\n                )\r\n            }\r\n         \r\n        </TextField>\r\n        </ThemeProvider>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import {Container, Switch, withStyles} from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Definitions from './components/definitions/Definitions';\nimport Header from \"./components/header/header\"\n\n\nfunction App() {\n\n  \n  const [word, setWord] = useState('')\n\n  const [meanings, setMeanings] = useState([])\n  const [category, setCategory] = useState(\"en\")\n  const [LigthMode, setLightMode] = useState(false)\n\nconst DarkMode = withStyles({\n  switchBase: {\n    color: grey[300],\n    '&$checked': {\n      color: grey[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: grey[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\n  const dictionaryApi = async() => {\n\n    try { const data = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`)\n\n    setMeanings(data.data)\n\n      \n    }\n    \n     catch (error) {\n\n      console.log(error)\n      \n    }\n\n  };\n    // console.log(meanings);\n\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category])\n  return (\n    <div className=\"App\" \n    style = {{height: \"100vh\", \n    backgroundColor: LigthMode? \"#fff\" :\"#2B3856\", \n    color: LigthMode? \"black\" :\"white\", \n    transition : \"all 0.5s linear\"}}>\n\n     <Container maxWidth = \"md\" \n     style = {{display : \"flex\", flexDirection:\"column\", height: \"100vh\", justifyContent : \"space-evenly\"}}>\n\n       <div style = {{position : \"absolute\",\n        top : 0, \n        right : 15,\n         paddingTop : 10}}> \n       <span> {LigthMode? \"Dark\" : \"Light\"} Mode</span>\n       <DarkMode checked = {LigthMode}\n        onChange = {() => setLightMode(!LigthMode) }/> </div>\n\n      <Header category = {category} \n      setCategory = {setCategory} \n      word =  {word} \n      setWord = {setWord}\n      LightMode = {LigthMode}></Header>\n\n      {meanings && (<Definitions word = {word} \n      meanings = {meanings} \n      category = {category}\n      LightMode = {LigthMode}></Definitions>)}\n\n     </Container>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}